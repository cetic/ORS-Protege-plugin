
    /* ***************************************************
     * Class ${classIri}
     */

    {
        javaMapping.add("${classIri}", ${interfaceName}.class, ${implementationName}.class);
    }

    /**
     * Creates an instance of type ${interfaceName}.  Modifies the underlying ontology.
     */
    public ${interfaceName} create${interfaceName}(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.${VocabClass}, ${implementationName}.class);
    }

    /**
     * Gets an instance of type ${interfaceName} with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public ${interfaceName} get${interfaceName}(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.${VocabClass}, ${implementationName}.class);
    }

    /**
     * Gets all instances of ${interfaceName} from the ontology.
     */
    public Collection<? extends ${interfaceName}> getAll${interfaceName}Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.${VocabClass}, ${implementationName}.class);
    }

